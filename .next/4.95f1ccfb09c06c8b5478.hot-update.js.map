{"version":3,"file":"4.95f1ccfb09c06c8b5478.hot-update.js","sources":["webpack:///components/IdeaComponent.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport 'isomorphic-fetch'\nimport Layout from './layout';\nimport Masonry from 'react-masonry-component';\nimport InfiniteScroll from 'react-infinite-scroller'\nimport ImageModal from './image-modal';\nimport {mapObject , ucfirst} from '../libraries/helpers'\nimport $ from 'jquery';\nconst APIURL = process.env.DOMAIN + process.env.APIURI\nvar currentPath = '/'\nvar asPath = '/'\nimport Router from 'next/router';\n\nexport default class IdeaComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            images: [],\n            nextUrl : null,\n            hasMoreItems: true,\n            h1 : null,\n            filter_default : [],\n            listBadge : []\n        }\n        currentPath = this.props.path\n        asPath = this.props.asPath\n    }\n    \n    async getValue() {\n        var url = APIURL + 'y-tuong';\n        if(this.props.ideaParams){\n            url = APIURL + 'y-tuong/' + this.props.ideaParams\n        }\n        \n       await axios.get(url).then(resp => {\n                var data = resp.data\n                this.setState({\n                    h1 : data.h1,\n                    filter_default : data.filter_default,\n                    color : data.colors,\n                    images: data.images.data,\n                    nextUrl: data.images.next_page_url,\n                    listBadge : data.listBadge\n                })\n            })\n    }\n    componentDidMount = async () => {\n        await this.getValue(this)\n        var showChar = 150;  // How many characters are shown by default\n        var ellipsestext = \"\";\n        var moretext = \"Xem thêm >\";\n        var lesstext = \"Rút gọn <\";\n        $('.moreDes').each(function(e) {\n            var content = $(this).html();\n            if(content.length > showChar) {\n                var c = content.substr(0, showChar);\n                var h = content.substr(showChar, content.length - showChar);\n                var html = c + '<span class=\"moreellipses\">' + ellipsestext+ '&nbsp;</span><span class=\"morecontent\"><span>' + h + '</span>&nbsp;&nbsp;<a href=\"\" class=\"morelink\">' + moretext + '</a></span>';\n                $(this).html(html);\n            }\n\n        });\n\n        $(\".morelink\").click(function(e){\n            e.preventDefault()\n            if($(this).hasClass(\"less\")) {\n                $(this).removeClass(\"less\");\n                $(this).html(moretext);\n            } else {\n                $(this).addClass(\"less\");\n                $(this).html(lesstext);\n            }\n            $(this).parent().prev().toggle();\n            $(this).prev().toggle();\n            // $('.grid').masonry.on('layoutComplete', this.handleLayoutComplete);\n            return false;\n        });\n      }\n    loadItems(page) {\n        var self = this;\n        var url = '';\n        if(this.state.nextUrl) {\n            url = this.state.nextUrl;\n        }\n        if(this.state.nextUrl != null){\n            axios.get(url)\n            .then(function(resp) {\n                if(resp) {\n                    var tracks = self.state.images;\n                    var data = resp.data\n                    data.images.data.map((track) => {\n                        tracks.push(track);\n                    });\n                   \n                    if(data.images.next_page_url && data.images.next_page_url != null) {\n                        self.setState({\n                            images: tracks,\n                            nextUrl: data.images.next_page_url,\n                        });\n                    } else {\n                        self.setState({\n                            hasMoreItems: false\n                        });\n                    }\n                }\n            });\n        }\n       \n    }\n    showPhoto (e, id , slug) {\n        e.preventDefault()\n        Router.push(`${currentPath}?photoId=${id}&slug=${slug}`,`/anh/${id}-${slug}`)\n    }\n    dismissModal (id) {\n        Router.push(currentPath,asPath)\n    }\n   render(){\n        const masonryOptions = {\n            gutter: '.grid__gutter-sizer',\n            isOriginLeft: true\n        };\n       const { images , h1 ,filter_default , color , listBadge} = this.state\n       const { photoId , slug } = this.props;\n       return(\n        <Layout {...this.props} navmenu={false} container={false}>\n        {\n            photoId ?\n            <ImageModal\n                id={photoId}\n                slug={slug}\n                onDismiss={() => this.dismissModal(photoId)}\n            /> : ''\n        }\n        <div className=\"container-fluid service px-4 bg-gray\">\n            <div className=\"row\">\n                <div className=\"col-0 col-md-3 col-lg-3 px-3\" id=\"sidebar\">\n                    <Sidebar filter={filter_default} color={color}></Sidebar>\n                </div>\n                <div className=\"col-12 col-md-9 col-lg-9 px-0\" id=\"cat\">\n                    <div className=\"bg-white px-3 py-4\">\n                    <h1 className=\"text-dark title ml-1 pt-3\">{ h1 && h1 }</h1>\n                        <div className=\"list-tag\">\n                    {\n                        listBadge ?\n                        listBadge.map((value,index) => {\n                               return <a href={value.uri} key={index}><span className=\"badge badge-pill badge-light border border-primary mr-2 my-1 service-tag\">{value.name_tag} <i className=\"close\"></i></span></a>\n                        }) : ''\n                    }\n                        </div>\n                    <InfiniteScroll\n                        pageStart={0}\n                        loadMore={this.loadItems.bind(this)}\n                        hasMore={this.state.hasMoreItems}\n                        loader={<div className=\"loader\" key='cx'>Loading ...</div>}> \n                    <Masonry\n                    className={'.grid are-images-unloaded mt-3'} \n                    disableImagesLoaded={false}\n                    options={masonryOptions}\n                    updateOnEachImageLoad={false}\n                    >\n                        <div className=\"grid__col-sizer\"></div>\n                        <div className=\"grid__gutter-sizer\"></div>\n                        {\n                            images && images.map((value,index) =>( \n                        \n                                <div className=\"grid__item rounded p-1\" key={index}>\n                                    <div className=\"grid__images\">\n                                        <div className=\"position-relative\">\n                                            <span className=\"position-absolute rounded d-none upload\"> <i className=\"fa fa-upload\"></i> Lưu ảnh</span>\n                                            <a  onClick={(e) =>  this.showPhoto(e, value.id , value.slug)}>\n                                                <img className=\"rounded\" src={value.medium_path} alt=\"{{ $element->name }}\" />\n                                            </a>\n                                            \n                                        </div>\n                                    </div>\n                                    <div className=\"position-relative idea-content\">\n                                        <h2 className=\"mt-2 font-13 text-black-100\" data-title=\"{{ $element->name }}\">{value.name}</h2>\n                                        <p className=\"mt-2 images-title font-12 text-black-100 moreDes\">{value.descriptions}</p>\n                                    </div>\n                \n                                </div>\n                            ))\n                        }\n                        </Masonry>\n                        </InfiniteScroll>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </Layout>\n       )\n   }\n}\nclass Sidebar extends React.PureComponent{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        const { filter , color } = this.props\n        return(\n            <div className=\"sidebar-service row bg-white\">\n                <div className=\"d-md-block px-2 w-100 sidebar-service-content\">\n                {\n                    filter && filter.map((value,index) => (\n                        value.data.length != 0 &&\n                        <div className=\"child-sidebar-service pb-1 col-12 offset-md-0 col-md-12 px-0\" key={index}>\n                            <div className=\"mt-2 widget p-3\">\n                            <h3 className=\"font-15 mb-3\">{value.textName}<span className=\"fa fa-chevron-right d-block d-md-none\"  data-toggle=\"collapse\" data-target=\"#demoTest\"></span></h3>\n                            <ul className=\"list-unstyled mb-0 collapse d-md-block\" id=\"demoTest\">\n                             \n                                {\n                                    \n                                    value.data && mapObject(value.data, function (index, value) {\n                                        return <li className=\"py-1 radio\" key={index}>\n                                            <a href={value.uri} className=\"font-13 font-weight-light text-gray\"><label className=\"px-3\">{value.name_tag}<span>{value.total_doc}</span></label></a>\n                                        </li>\n                                    })\n                                }\n                                \n                                <span className=\"more loadmore d-none d-md-block\">Xem thêm <i className=\"la la-arrow-circle-right\"></i></span>\n                            </ul>\n                            </div>\n                        </div>\n                        \n                    ))\n                }  \n                    <div className=\"child-sidebar-service pb-1 col-12 offset-md-0 col-md-12 px-0\">\n                        <div className=\"mt-2 widget p-3\">\n                            <h3 className=\"font-15\">MÀU SẮC</h3>\n                            <span className=\"expand-list\"></span>\n                            <div className=\"service-color mt-3\">\n                            {\n                                color && mapObject(color , function(index,value) {\n                                   return  <a href={value.uri} className=\"text-dark border border-gray\" key={index}><span className=\"float-left {{ array_get(config('filter.idea.data_type.color.class_name'), $item->original) }}\" data-toggle=\"tooltip\" title={value.name_tag}></span></a>\n                                })\n                            }  \n                            </div>\n                        </div>\n                   \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// components/IdeaComponent.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAXA;AAYA;AACA;;;;;;;;;;;;;;AAEA;AACA;AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AA4BA;;;;AAlLA;AACA;AADA;AACA;AAmLA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;;;;AAlDA;;;;A","sourceRoot":""}