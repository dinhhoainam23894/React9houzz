{"version":3,"file":"5.8b2f4b80617fd48a076d.hot-update.js","sources":["webpack:///pages/idea.js"],"sourcesContent":["import React from 'react'\nimport IdeaComponent from '../components/IdeaComponent'\nimport 'isomorphic-fetch'\n\nconst APIURL = process.env.DOMAIN + process.env.APIURI\n\nexport default class extends React.Component{\n    static async getInitialProps({query}){\n        const res = await fetch(APIURL+\"y-tuong\")\n        const data = await res.json()\n        return {    h1 : data.h1,\n                    filter_default : data.filter_default,\n                    colors : data.colors,\n                    images: data.images.data,\n                    nextUrl: data.images.next_page_url\n                    , title : data.seo.title\n                    , des : data.seo.des\n                    , canonical : data.seo.canonical\n                    , robots : data.seo.robots\n                    , og_url : data.seo.url\n                    , url_images : data.seo.url_image\n                    , headerProjects : data.headerProjects\n                    , headerCategories : data.headerCategories\n                    , dataBase : data.dataBase\n                }\n    }\n    constructor(props){\n        super(props)\n        this.state = {\n            nextUrl : this.props.nextUrl,\n            images : this.props.images\n        }\n    }\n    \n   render(){\n       const { url } = this.props\n       console.log(this.props.filter_default.reverse())\n       return(\n            <IdeaComponent \n                {...this.props}\n                photoId={this.props.url.query && this.props.url.query.photoId}\n                asPath={url.asPath} \n                path={url.pathname}\n                nextUrl={this.state.nextUrl}\n                images={this.state.images}\n                detail={true}\n                changeState={(images,nextPage)=>{this.setState({images : images , nextUrl : nextPage})}}\n                ></IdeaComponent>\n       )\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/idea.js"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AACA;;;;;;;;;;;;;;;AAeA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AAAA;AACA;AADA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AA3CA;AACA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}